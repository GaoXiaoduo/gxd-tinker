apply plugin: 'com.android.application'
apply from: 'tinkerpatch.gradle'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.gxd.tinker"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        /**
         * you can use multiDex and install it in your ApplicationLifeCycle implement
         */
        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro")
        //keep specific classes using proguard syntax
    }
    signingConfigs {

        Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('../gxd-sign/gxd-sign.properties')))

        debug {
            // 使用assert确保存在该属性否则报错，避免错误打包
            assert localProps['sign-debug-name']

            keyAlias localProps["aliasDebug"]
            keyPassword localProps["passDebug"]
            storeFile file(localProps["storeDebug"])
            storePassword localProps["storePassDebug"]
        }

        release {
            // 使用assert确保存在该属性否则报错，避免错误打包
            assert localProps['sign-name']

            keyAlias localProps["alias"]
            keyPassword localProps["pass"]
            storeFile file(localProps["store"])
            storePassword localProps["storePass"]
        }
    }

    buildTypes {
        debug {
            // 是否进行混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    //recommend
    dexOptions {
        jumboMode = true
    }

    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // 用来测试multiDex
    implementation 'com.android.support:multidex:1.0.3'
    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.9") { changing = true }
    //compileOnly("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    //implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") { changing = true }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:1.9.9"){ changing = true }
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.9"){ changing = true }
}
